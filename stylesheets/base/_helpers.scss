// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Remove the default bullet and left indent from an unordered list
 */
.list--unstyled {
  list-style: none;
  padding-left: 0;
}

/**
 * Containers and wrapper
 * 1. Use default gutter values for margins
 * 2. Calculate width with gutters
 * 3. Make the container full width without gutters
 * 4. Flexbox wrapper classes
 * 5. Apply flex-direction: column to a flex parent container
 * 6. Use CSS grid to create 12-column grid on container element

 */

.container {
  margin: 0 $gutters-default; /* 1 */
  width: calc(100% - (#{$gutters-default}) * 2); /* 2 */
}

.container--full-width {
  width: 100%; /* 3 */
}

.wrapper { /* 4 */
  display: flex;
  justify-content: center;
}

.flex { /* 4 */
  display: flex;
}

.flex--column { /* 5 */
  flex-direction: column;
}


.grid {
  @include twelve-column-grid; /* 6 */
}

.visually-hidden {
  @include visually-hidden;
}

/**
 * Defines classes to show or hide elements based on mixins.
 **/
.hide-on-lg-up {
  @include hide-on-lg-up;
}

.show-on-lg-up {
  @include show-on-lg-up;
}

.hide-on-md-up {
  @include hide-on-md-up;
}

.show-on-md-up {
  @include show-on-md-up;
}

.show-on-focus {
  @include show-on-focus;
}

/**
* Base class for material icons setting 24px font size and normal line-height.
**/
.material-icon {
  @include material-icon;
}

/**
* Helper classes to adjust icon positions
**/
.material-icon--space-before {
  margin-left: 3px;
}

.material-icon--space-after {
  margin-right: 3px;
}

/*
* Creates margin and padding utility classes for component layout.
* e.g. .mr-10 gives margin-right 10 pixels.
* The first letter is "m" or "p" for MARGIN or PADDING
* Second letter is "t", "b", "l", or "r" for TOP, BOTTOM, LEFT, or RIGHT
* Second letter x is for RIGHT and LEFT, y is for TOP and BOTTOM
* Third letter is the number of spacing in pixels. Adjust the amounts generated by
* editing the $spaceamounts variable below.
* Skip the second letter to define the space for all 4 sides. E.g. m-10
*
* 1. Defines classes for space amounts 0 to 60.
*/

$sides: (top, bottom, left, right);

@for $spaceamounts from 0 through 60 { /* 1 */
  @each $space in $spaceamounts {
    .m-#{$space} {
      margin: #{$space}px !important;
    }
    .p-#{$space} {
      padding: #{$space}px !important;
    }

    @each $side in $sides {
      .m#{str-slice($side, 0, 1)}-#{$space} {
        margin-#{$side}: #{$space}px !important;
      }
      .p#{str-slice($side, 0, 1)}-#{$space} {
        padding-#{$side}: #{$space}px !important;
      }
      .mx-#{$space} {
        margin-left: #{$space}px !important;
        margin-right: #{$space}px !important;
      }
      .my-#{$space} {
        margin-bottom: #{$space}px !important;
        margin-top: #{$space}px !important;
      }
      .px-#{$space} {
        padding-left: #{$space}px !important;
        padding-right: #{$space}px !important;
      }
      .py-#{$space} {
        padding-bottom: #{$space}px !important;
        padding-top: #{$space}px !important;
      }
    }
  }
}
